// function replacer(str, name, surname, offset, s) {
//   return surname + " " + name;
// }

// var str = "–í–∞—Å–∏–ª–∏–π –ü—É–ø–∫–∏–Ω —Å—É–ø–µ—Ä —Å—Ç–∞—Ä";
// let regexp = / /g;
// console.log(str.replace(/(–í–∞—Å–∏–ª–∏–π) (–ü—É–ø–∫–∏–Ω)/, replacer)); // –ü—É–ø–∫–∏–Ω, –í–∞—Å–∏–ª–∏–π
// let result = str.match(regexp);

// let str = '–ú–∏—Å—Å–∏—Å –∏ –º–∏—Å—Ç–µ—Ä –ü–æ–ø–ø–∏–Ω–∑ –≤–∑—è–ª–∏ –∑–æ–Ω—Ç–∏–∫ –∏ –ø–æ—à–ª–∏ –∫ –º–µ–¥–≤–µ–¥—é - –º–∏—Å—Ç–µ—Ä –í–∞–Ω—è, –∫–æ—Ç–æ–æ—Ä—ã–π –ª—é–±–∏–ª –º–µ–¥ –∏ –º–∏—Å—Å–∏—Å –ü–æ–ø–ø–∏–Ω–∑';
// let regexp = /\S{5}?/gi;
// let result = str.match(regexp);
// console.log(result);
// console.dir(result);

//let str2 = " –ö–æ—Ç –ª—é–±–∏—Ç –∫—É—à–∞—Ç—å –∫–æ—Ç–ª–µ—Ç—ã –∏–∑ –ø–æ–¥ –∫–æ—Ç–æ–≤—Å–∫–æ–≥–æ –º—è—Å–∞. –≤–æ—Ç —ç—Ç–æ—Ç –∫–æ—Ç, –æ–¥–Ω–∞–∫–æ –∫–æ—Ç–æ–µ–¥))))";
//let regexp = /–∫–æ—Ç/gi;
// let result;
// result = resultay.from(str.matchAll(regexp));
// result = regexp.exec(str);
// regexp.exec(str);
// regexp.exec(str);
// regexp.exec(str);
// result = regexp.exec(str);
// console.log(result + ' last index: ' + regexp.lastIndex);

// let str2 = "d s–ö–æ—Ç –ª—é–±–∏—Ç –∫—É—à–∞—Ç—å –∫–æ—Ç–ª–µ—Ç—ã –∏–∑ –ø–æ–¥ –∫–æ—Ç–æ–≤—Å–∫–æ–≥–æ –º—è—Å–∞. –≤–æ—Ç d—ç—Ç–æ—Ç –∫–æ—Ç, –æ–¥–Ω–∞–∫–æ –∫–æ—Ç–æ–µ–¥))))";
// let res = regexp.exec(str2);
// regexp.exec(str2);
// regexp.exec(str2);
// regexp.exec(str2);
// console.log(res + ' last index: ' + regexp.lastIndex);

//—Ç–∞–∫ –∫–∞–∫ matchAll –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –±—Ä–∞—É–∑–µ—Ä–∞–º–∏, —Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å —Å–≤–æ–µ
// function matchAll(str, regexp) {
//   let result = [];
//   let currentResult = null;
//   while (currentResult = regexp.exec(str)) {
//     result = [...result, currentResult];
//   }
//   return result;
// }

// //console.log(matchAll(str2)[2]);

// let regexp1 = /[a-f\d]{2}(?<separator>[-:])([a-f\d]{2}\k<separator>){4}[a-f\d]{2}/gi;

// let str = `
//   ARP —Ç–∞–±–ª–∏—Ü–∞:
//   –§–∏–∑–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å     IP-–∞–¥—Ä–µ—Å
//   03-60-8C-FF-02-02    197.17.13.3
//   00:01:A2:05:03:13    197.17.13.44
//   AA-00-04:6A-92-89    197.17.13.123
//   09-33-02-09-90-90    197.17.13.4
//   08:8B:23:AA:91:81    197.17.13.62
//   `;

//   //console.log(str.match(regexp));
// //console.log(matchAll(str, regexp1));
// let result = str.replace(regexp1, (match, p1,p2, offset, input, groups)=>{
//   console.log('—Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ match: ' + match);
//   console.log('–ø–µ—Ä–≤–∞—è —Å–∫–æ–±–æ—á–Ω–∞—è –≥—Ä—É–ø–ø–∞: ' + p1);
//   console.log('–ø–æ–∑–∏—Ü–∏—è —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º: ' + offset);
//   console.log(`–∏—Å—Ö–æ–¥–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: ${input}`);
//   for(let group in groups){
//     console.log(group);
//   }
//   return `${p1}`;
// });
// console.log(result);

//let result = str.replace(regexp, '$\''); –≤—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ
// $` - –≤—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥—Å—Ç—Ä–æ–∫—É –¥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –≤ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ
//let result = str.replace(/(–í–∞—Å–∏–ª–∏–π) (–ü—É–ø–∫–∏–Ω)/, '$2 $1');//–º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ
//let result = str.replace(/(–í–∞—Å–∏–ª–∏–π) (–ü—É–ø–∫–∏–Ω)/, '–ò–∑–≤–µ—Å—Ç–Ω—ã–π $&');
//let result = str.replace(regexp, 'd');
//console.log(result);

// // –≤—ã–≤–µ—Å—Ç–∏ –∏ –∑–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
// function replacer(str, offset, s) {
//   console.log( "–ù–∞–π–¥–µ–Ω–æ: " + str + " –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏: " + offset + " –≤ —Å—Ç—Ä–æ–∫–µ: " + s );
//   return str.toLowerCase();
// }

// var result = "–û–ô-–û–π-–æ–π".replace(/–æ–π/gi, replacer);
// console.log( '–†–µ–∑—É–ª—å—Ç–∞—Ç: ' + result ); // –†–µ–∑—É–ª—å—Ç–∞—Ç: –æ–π-–æ–π-–æ–π


// —Å–æ —Å–∫–æ–±–æ—á–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º
// function replacer(str, name, surname, offset, s) {
//   return surname + ", " + name;
// }

// var str = "–í–∞—Å–∏–ª–∏–π –ü—É–ø–∫–∏–Ω";

// console.log(str.replace(/(–í–∞—Å–∏–ª–∏–π) (–ü—É–ø–∫–∏–Ω)/, replacer)); // –ü—É–ø–∫–∏–Ω, –í–∞—Å–∏–ª–∏–π


// var str = "–õ—é–±–ª—é —Ä–µ–≥—ç–∫—Å–ø—ã —è, –Ω–æ —Å—Ç—Ä–∞–Ω–Ω–æ—é –ª—é–±–æ–≤—å—é";

// // —ç—Ç–∏ –¥–≤–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã. test - –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ RegExp
// console.log( /–ª—é/i.test(str) ); // true
// console.log( str.search(/–ª—é/i) != -1 ); // true

// let ddd = /ff/;
// console.log(ddd.lastIndex);

//–ï—Å–ª–∏ —Ñ–ª–∞–≥–∞ g –Ω–µ—Ç, —Ç–æ regexp.exec(str) –∏—â–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ,
//—è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–Ω—ã–º –∞–Ω–∞–ª–æ–≥–æ–º –≤—ã–∑–æ–≤–∞ str.match(reg).

// –ù–æ –µ—Å–ª–∏ –µ—Å—Ç—å g, —Ç–æ:
// regexp.exec(str) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é
// –ø–æ—Å–ª–µ –Ω–µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–µ regexp.lastIndex.
// –°–ª–µ–¥—É—é—â–∏–π –≤—ã–∑–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø–æ–∏—Å–∫ –æ—Ç regexp.lastIndex –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ.
// –ï—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç, —Ç–æ regexp.exec –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null,
// –∞ –¥–ª—è regexp.lastIndex —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ 0.
// exec - –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ RegExp

// let str = '–ë–æ–ª—å—à–µ –æ JavaScript –Ω–∞ https://javascript.info';
// let regexp = /javascript/ig;
// let result;

// while ((result = regexp.exec(str)) == true) {
//   console.log( `–ù–∞–π–¥–µ–Ω–æ ${result[0]} –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ ${result.index}` );
// }

//–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
// let str = "+7(903)-123-45-67";
// let reg = /\d/g;
// console.log( str.match(reg) ); // –º–∞—Å—Å–∏–≤ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: 7,9,0,3,1,2,3,4,5,6,7
// console.log( str.match(reg).join('') ); // 79035419441
//–±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –ø—É—Ç—å
//console.log( str.replace(/\D/g, "") ); // 79031234567


//–ï—Å–ª–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç —Ñ–ª–∞–≥ 'g',
//—Ç–æ regexp.test —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–æ–º regexp.lastIndex, —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫regexp.exec
// let regexp = /–ª—é–±–ª—é/gi;

// let str = "–Ø –ª—é–±–ª—é JavaScript";

// // –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Å 10 –ø–æ–∑–∏—Ü–∏–∏:
// regexp.lastIndex = 10;
// console.log( regexp.test(str) ); // false (—Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç)

//–û–¥–Ω–æ –∏ —Ç–æ –∂–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ,
//–º–æ–∂–µ—Ç –∏–º–µ—Ç—å –¥—Ä—É–≥–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// let regexp = /javascript/g;  // (regexp —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω: regexp.lastIndex=0)

// console.log( regexp.test("javascript") ); // true (–∞ —Ç–µ–ø–µ—Ä—å regexp.lastIndex=10)
// console.log( regexp.test("javascript") ); // false
//–≠—Ç–æ –∏–º–µ–Ω–Ω–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ –≤–æ –≤—Ç–æ—Ä–æ–º —Ç–µ—Å—Ç–µ regexp.lastIndex –Ω–µ —Ä–∞–≤–µ–Ω –Ω—É–ª—é.
//–ß—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ —ç—Ç–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
//–∏–ª–∏ –ø–µ—Ä–µ–ø—Ä–∏—Å–≤–æ–∏—Ç—å regexp.lastIndex = 0 –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –ø–æ–∏—Å–∫–æ–º.

// \b - –≥—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞. –æ–Ω–∞ –∏–º–µ–µ—Ç –Ω—É–ª–µ–≤—É—é —à–∏—Ä–∏–Ω—É. —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞
// console.log( "Hello, Java!".match(/\bHello\b/) ); // Hello
// console.log( "Hello, Java!".match(/\bJava\b/) );  // Java
// console.log( "Hello, Java!".match(/\bHell\b/) );  // null (–Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è)
// console.log( "Hello, Java!".match(/\bJava!\b/) ); // null (–Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è)
// console.log( "1 23 456 78".match(/\b\d\d\b/g) ); // 23,78
//–ì—Ä–∞–Ω–∏—Ü–∞ —Å–ª–æ–≤–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤, –Ω–µ –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ.
// \b –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≥—Ä–∞–Ω–∏—Ü—É –º–µ–∂–¥—É \w –∏ —á–µ–º-—Ç–æ –µ—â—ë
// for(let i=0; i<'ùí≥ùí¥'.length; i++) {
//   console.log('ùí≥ùí¥'.charCodeAt(i)); // 55349, 56499, 55349, 56500
// }

// let str = "–ó–∞–≤—Ç—Ä–∞–∫ –≤ 09:00 –≤ –∫–æ–º–Ω–∞—Ç–µ 123:456";
// let regexp = /\b\d\d:\d\d\b/g;
// console.log(str.match(regexp));

// let str = "–ó–ó–∞–≤—Ç—Ä–∞–∫ –≤ 39:00 –≤ –∫–æ–º–Ω–∞—Ç–µ 123:456–∫ –≤ 23:59.";
// var reg = /(\b[01]\d|2[0-3]):[0-5]\d\b/g;
// console.log(str.match(reg));

// let str ="–ó–∞–≤—Ç—Ä–∞–∫ –≤ 09:00. –£–∂–∏–Ω –≤ 21-30";
// let reg = /(([0-1]\d[:-][0-5]\d)|(2[0-3][:-][0-5]\d)|(24[:-]00))(?![\d\w])/g;
// console.log(str.match(reg));

//–ö–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π)
//–∫–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤—Ç–æ—Ä—è–µ–º–æ—Å—Ç—å
//–∂–∞–¥–Ω—ã–π –∫–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—É—é –ø–æ–¥—Å—Ç—Ä–æ–∫—É
//–ª–µ–Ω–∏–≤—ã–π –∫–≤–∞–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—É—é –ø–æ–¥—Å—Ç—Ä–æ–∫—É

// let reg = /\.{3,}/g;
// console.log( "–ü—Ä–∏–≤–µ—Ç!... –ö–∞–∫ –¥–µ–ª–∞?.....".match(reg) );

// let reg = /#[a-f0-9]{6}\b/gi;
// let str = "color:#121212; background-color:#AA00ef bad-colors:f#fddee #fd2 #12345678";
// console.log(str.match(reg));

// var str = "–Ø –ª—é–±–ª—é JavaScript!";
// var N = 3;
// let reg = new RegExp("[–∞-—è—ë]{1,"+N+"}");
// console.log( str.match("[–∞-—è—ë]{1,"+N+"}"));

// let reg = /"[^"]+"/g;
// let str = 'a "witch" and her "broom" is one';
// console.log( str.match(reg) ); // witch, broom
// 
// let reg = /<!--[\s\S]*?-->/g;
// let str = `... <!-- My -- comment
//  test --> ..  <!--gg--> ..
// `;
// console.log( str.match(reg) );

// let regexp = /<!--[\s\S]*?-->/g;

// let str = `... <!-- My -- comment
//  test --> ..  <!----> ..
// `;

// console.log( str.match(regexp) ); // '<!-- My -- comment \n test -->', '<!---->'

// let regexp = /<[^<>]+>/g;

// let str = '<> <a href="/"> <input type="radio" checked> <b>';

// console.log( str.match(regexp) ); // '<a href="/">', '<input type="radio" checked>', '<b>'
// let str = '<h1>Hello, world!<h2>';

// function matchAll(str, regexp){
//   let result = [];
//   let currentElem = null;
//   while(currentElem = regexp.exec(str)){
//     result = [...result, currentElem];
//     console.log('last index:' + regexp.lastIndex);
//   }
//   console.log(typeof regexp);
//   console.log(regexp);
//   return result;
// }

// let dateRegexp = /([0-9]{4})-([0-9]{2})-([0-9]{2})/g;

// let str = "2019-10-30 2020-01-01 2021-22-33";
// let groupResults=[];
// let m;
// while (m=dateRegexp.exec(str)) {
//   groupResults = [...groupResults, m[1],m[2],m[3]];
// }
// console.log(groupResults);

// let results = str.matchAll(dateRegexp);
// let i = 0;

// for(let result of results) {
//   let [year, month, day] = [groupResults[i], groupResults[i+1], groupResults[i+2]];
//   //let {year, month, day} = groupResults;
//   i+=3;

//   console.log(`${day}.${month}.${year}`);

//   // –ø–µ—Ä–≤—ã–π –≤—ã–≤–æ–¥: 30.10.2019
//   // –≤—Ç–æ—Ä–æ–π: 01.01.2020
// }

// let str2 = "2039-10-30 2020-01-01 2021-22-33";
// console.log(dateRegexp.exec(str2));

// let tag = matchAll(str, /<[^f](.*?)>/g);

// console.log(tag);
// console.log(typeof tag[0] ); // <h1>
// console.log( tag[1] );
// console.log(typeof tag.input); // h1

// let str = '<span \nclass="my"z>sss';

// let regexp = /<(([a-z]+)\s*([^>]*))>/;

// let result = str.match(regexp);
// console.log(result.input);
// console.log(result[0]); // <span class="my">
// console.log(result[1]); // span class="my"
// console.log(result[2] + result[3]); // span

// let results = '<h1> <h2> <b> <h3></h3></b>';
// const regexp = /<(.*?)>/gi;
// let i = 0;
// let elem;
// // results - –Ω–µ –º–∞—Å—Å–∏–≤, –∞ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç
// for(let result of results.matchAll(regexp)){
//   console.log(result);
//   i++;
//   elem = result;
//   if(i>=3){
//     break;
//   }
// }
// console.log(elem);

// results = Array.from(results); // –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ –º–∞—Å—Å–∏–≤

// console.log(results[0]); // <h1>,h1 (–ø–µ—Ä–≤—ã–π —Ç–µ–≥)
// console.log(results[1]); // <h2>,h2 (–≤—Ç–æ—Ä–æ–π —Ç–µ–≥)

// let regexp = /\[(b|quote|url)\][\n\S]*?\[\/\1\]/i;

// let str = "..[url][b]http://ya.ru[/b][/url]..";
// console.log( str.match(regexp) ); // [url][b]http://ya.ru[/b][/url]

// let str = "1 –∏–Ω–¥–µ–π–∫–∞ —Å—Ç–æ–∏—Ç 30‚Ç¨";

// console.log( str.match(/\d+(?=‚Ç¨)/) ); // 30, —á–∏—Å–ª–æ 1 –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∑–∞ –Ω–∏–º –ù–ï —Å–ª–µ–¥—É–µ—Ç ‚Ç¨

// let regexp = /(?<![-\d])\d+/g;

// let str = "0 12 -5 123 -18";

// console.log( str.match(regexp) ); // 0, 12, 123

// let regexp = /<body.*?>/;

// let str = `
// <html>
//   <body style="height: 200px">
//   ...
//   </body>
// </html>
// `;

// // str = str.replace(regexp, (match, offset, input)=>{
// //   return`${match}<h1>Hello</h1>`;
// //   //let str2 = input.slice(offset+match.length);input.slice(0, offset)+input.slice(offset+match.length)
// //   // console.log(match);
// //   // console.log(str1);
// //   // console.log(str2);
// //   //return str;
// // });
// str = str.replace(regexp, `$& <h1>Hello</h1>`);
// console.log(str);

// let str = "–Ø –ª—é–±–ª—é JavaScript";
// console.log(str.search(/Java(Script)?/i)!=-1);

function checkCreditCard(str) {
  let regexp = /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/;

  if (regexp.test(str)) {
    return true;
  } else {
    return false;
  }
}

console.log(checkCreditCard("378282246310006"));

console.log(checkCreditCard("37828224630006"));